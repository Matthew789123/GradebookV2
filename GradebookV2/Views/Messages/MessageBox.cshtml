@model GradebookV2.Models.MessageBoxViewModel

@{
    ViewBag.Title = "MessageBox";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Message Box</h2>
@if (User.IsInRole("Teacher"))
{
    <p>
        @Html.ActionLink("Send message", "NewMessage")
    </p>
}
else
{
    <p>
        @Html.ActionLink("Send message", "MessageToTeacher")
    </p>
}


<div class="tab">
    <button class="tablinks" onclick="setTab(event, 'received')">Received</button>
    <button class="tablinks" onclick="setTab(event, 'sended')">Sended</button>
</div>

<div id="sended" class="content table-responsive">
    <table class="table">
        <h2>Sended</h2>
        @if (Model.ReceivedMessages.Count != 0)
        {
            <thead>
                <tr>
                    <td class="col-md-2"> To </td>

                    <td class="col-md-2"> Title </td>

                    <td class="col-md-6"> Message </td>

                    <td class="col-md-2"> Date </td>
                </tr>
            </thead>
        }
        <tbody>
            @if (Model.SendedMessages.Count != 0)
            {
                foreach (var item in Model.SendedMessages)
                {
                    <tr>
                        @if (item.Receivers.Count > 1)
                        {
                            <td class="col-md-2">
                                Parents
                            </td>
                        }
                        else
                        {
                            <td class="col-md-2">
                                @item.Receivers[0].Name @item.Receivers[0].Surname
                            </td>
                        }
                        <td class="col-md-2">
                            @item.Title
                        </td>
                        <td class="message col-md-6">
                            @item.Content
                        </td>
                        <td class="col-md-2">
                            @item.Date
                        </td>
                    </tr>
                }
            }
            else
            {
                <p>There is no sended messages</p>
            }
        </tbody>
    </table>
</div>


<div id="received" class="content table-responsive">
    <table class="table">
        <h2>Received</h2>
        @if (Model.ReceivedMessages.Count != 0)
        { 
            <thead>
            <tr>
                <td class="col-md-2"> From </td>
           
                <td class="col-md-2"> Title </td>
           
                <td class="col-md-6"> Message </td>

                <td class="col-md-2"> Date </td>
            </tr>
        </thead>
        }

        
        <tbody>
            @if (Model.ReceivedMessages.Count != 0)
            {
                foreach (var item in Model.ReceivedMessages)
                {
                    <tr>
                        <td class="col-md-2">
                            @item.Sender.Name @item.Sender.Surname
                        </td>
                        <td class="col-md-2">
                            @item.Title
                        </td>
                        <td class="message col-md-6">
                            @item.Content
                        </td>
                        <td class="col-md-2">
                            @item.Date
                            @Html.ActionLink("Reply", "Reply", new { messageId = item.MessageId, senderId = item.Sender.Id }, new { @style = "float:right;margin-top:1%;" })
                        </td>
                    </tr>
                }
            }
            else
            {
                <p>There is no received messages</p>
            }
        </tbody>
    </table>
</div>


@section scripts{
    <script>

        $(document).ready(function () {
            $(".message").each(function () {
                if ($(this).text().length > 100) {
                    var message = $(this).text().substr(0, 100);
                    $(this).text(message + " ...");
                }

            })
        })



        function setTab(evt, tabName) {
            // Declare all variables
            var i, tabcontent, tablinks;

            // Get all elements with class="tabcontent" and hide them
            tabcontent = document.getElementsByClassName("content");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Get all elements with class="tablinks" and remove the class "active"
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }

            // Show the current tab, and add an "active" class to the button that opened the tab
            document.getElementById(tabName).style.display = "block";
            evt.currentTarget.className += " active";
        }

    </script>
}